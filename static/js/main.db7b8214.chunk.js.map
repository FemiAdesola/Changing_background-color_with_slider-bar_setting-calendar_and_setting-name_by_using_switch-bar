{"version":3,"sources":["Exercise3.1.js","Exercise3.2.js","Exercise3.3.js","index.js"],"names":["useStyles","makeStyles","root","height","margin","App","classes","React","useState","red","setRed","blue","setBlue","green","setGreen","styles","backgroundColor","Paper","style","background","width","marginTop","padding","textAlign","display","justifyContent","bgcolor","Box","Typography","id","className","container","spacing","alignItems","Slider","orientation","valueLabelDisplay","value","step","min","max","onChange","event","color","aria-labelledby","Ap","Date","startTime","setStartTime","selected","setSelected","theme","textField","marginLeft","marginRight","dtf","Intl","DateTimeFormat","year","month","day","handleDateChange","index","startTimeupdate","slice","concat","target","Grid","justify","Table","TableHead","TableRow","TableCell","map","TableBody","onClick","select","TextField","type","defaultValue","toISOString","substring","InputLabelProps","shrink","component","scope","format","Button","variant","disabled","A","method","setMethod","name","setName","student","setStudent","studentID","setStudentID","FormGroup","label","placeholder","FormControlLabel","control","Switch","checked","alert","TableContainer","row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db7b8214.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n  root: {\n        height: 300,\n        margin: 10,\n    },\n});\n\n\n\nfunction App () {\n    const classes = useStyles();\n    const [red, setRed]= React.useState(\"100\")\n    const [blue, setBlue] = React.useState(\"100\")\n    const [green, setGreen] = React.useState(\"100\")\n    \n    let styles = {\n        backgroundColor: `rgb(${red}, ${green}, ${blue})`,\n    }\n\n    const handleRedChange = (event, color) => {\n    setRed(color);\n  };\n    const handleBlueChange = (event, color) => {\n    setBlue(color);\n  };\n\n    const handleGreenChange = (event, color) => {\n    setGreen(color);\n  };\n\n  return (\n   <Paper style={{background:\"teal\", width: 500, margin: 50, marginTop: 20, padding: 50, textAlign: 'center',}} display=\"flex\" justifyContent=\"center\"  bgcolor=\"background.paper\">\n          <Box style={{background:\"blue\",padding:10, margin:0}}>\n                  <li>\n                      Move all slider downward\n                  </li>\n                  <li>\n                      In order to change color move the slider one after the other\n                  </li>\n          </Box>\n          <Typography style={{background:\"purple\", marginTop: 20,}}id=\"vertical-slider\" >\n              Colors Bar\n      </Typography>\n          <div style={styles}>\n\n          <div className={classes.root} container spacing={2} alignItems=\"center\">\n              <Slider \n                      orientation=\"vertical\"\n                      valueLabelDisplay=\"20\"\n                  value={red}\n                  step={0.5}\n                  min={0}\n                  max={255}\n                  onChange={handleRedChange}\n                  aria-labelledby=\"vertical-slider\"\n              />\n         <Slider\n          orientation=\"vertical\"\n          valueLabelDisplay=\"20\"\n                  value={blue}\n                  step={0.5}\n                  min={0}\n                  max={255}\n                  onChange={handleBlueChange}\n                  aria-labelledby=\"vertical-slider\"\n              />\n        \n              <Slider\n          orientation=\"vertical\"\n          valueLabelDisplay=\"20\"\n                  value={green}\n                  step={0.5}\n                  min={0}\n                  max={255}\n                  onChange={handleGreenChange}\n                  aria-labelledby=\"vertical-slider\"\n                  />      \n    </div>\n          </div>\n   </Paper>\n      \n  );\n}\nexport default App;","import React from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport Button from '@material-ui/core/Button';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nfunction Ap() {\n    const [startTime, setStartTime] = React.useState([new Date()]);\n    const [selected, setSelected] = React.useState(-1);\n\n\n    const select = (event, index) => {\n        setSelected(index)\n    }\n\n\tconst useStyles = makeStyles(theme => ({\n\t\ttextField: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t\tmarginRight: theme.spacing(1),\n\t\t\twidth: 150,\n\t\t},\n\t}));\n    \n\tconst dtf = new Intl.DateTimeFormat(\"en-GB\", {year: 'numeric', month: 'numeric', day: 'numeric'}) \n\n\t const classes = useStyles();\n\tconst handleDateChange = (event, index) => {\n\t\tlet startTimeupdate = startTime.slice(0, index).concat([new Date(event.target.value)]).concat(startTime.slice(index+1));\t\n        setStartTime(startTimeupdate);\n\t}\n\t\n  \n\n    const add = (event) => {\n        setStartTime(startTime.concat([new Date()]));\n    }\n\n    \n    \n    const remove = (event) => {\n\t\tsetStartTime(startTime.slice(0, selected).concat(startTime.slice(selected+1)));\n\t\tsetSelected(-1);\n\t}\n\treturn (\n        <Paper style={{ width: 500, margin: 50, marginTop: 50, padding: 50, textAlign: 'center', }}>\n            <Grid container justify=\"space-around\">\n                Use the ADD button to select the date and you can change the date manually, then click any line to remove\n                <Table>\n                    <TableHead >\n                        <TableRow >\n                            <TableCell>Select the Date</TableCell>\n                          <TableCell>Date Selected</TableCell>\n                        </TableRow>\n                    </TableHead>\n\n                    {startTime.map((startTime, index) =>\n                        \n                    <TableBody  key={index}\n                            selected={index === selected}\n                        onClick={(event)=>{select(event,index)}}>\n                        \n                        <TableRow >\n                                \n                            <TableCell >\n                                <TextField\n                                    type=\"date\"\n                                    onChange={(event) => { handleDateChange(event, index) }}\n                                    defaultValue={startTime.toISOString().substring(0, 10)}\n                                        InputLabelProps={{ shrink: true }}\n                                         className={classes.textField}\n                                />\n                            </TableCell>\n                            <TableCell key={index} component=\"th\" scope=\"row\">\n                                    {dtf.format(startTime)} \n                                </TableCell>\n\n                            </TableRow>\n                        \n                    \n                        </TableBody>\n                        )}\n                </Table>\n                \n            </Grid>\n            <hr />\n            <Grid container justify=\"space-around\">\n           <Button color=\"secondary\" variant=\"contained\" onClick={remove} disabled={selected<0}>Remove</Button>\n            <Button color=\"primary\" variant=\"contained\" id={\"addButton\"} onClick={add}>Add</Button>\n            </Grid>\n             \n        </Paper>\n    );\n}\n\nexport default Ap;\n","import React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nfunction A() {\n\tconst [method, setMethod] = React.useState([]);\n\tconst [name, setName] = React.useState(\"\");\n    const [student, setStudent] = React.useState(false);\n    const [studentID, setStudentID] = React.useState(\"\");\n\tconst [selected, setSelected] = React.useState(-1);\n\t\t\n\tconst updateName = (event) => {\n\t\tsetName(event.target.value);\n    }\n    const updateStudentID = (event) => {\n\t\tsetStudentID(event.target.value);\n\t}\n\tconst handleChange = (event, selected) => {\n        setStudent(selected);\n       \n\t}\n    const add = (event) => {\n        if (name !== \"\") {\n            setMethod(method.concat([{ \"name\": name, \"student\": student, \"studentID\": studentID }]));\n            if (studentID !== \"\") {\n                setMethod(method.concat([{ \"name\": name, \"student\": student, \"studentID\": studentID }]));\n            } else {\n                alert(\"StudentID is required.\")\n            }\n        } else {\n            alert(\"Name is required.\")\n            \n        }\n        \n    }\n\n        \n        \n   \n    \n    \n    const remove = (event) => {\n\t\tsetMethod(method.slice(0, selected));\n\t\tsetSelected(-1);\n\t}\n\treturn (\n        <Paper style={{backgroundColor: 'green', width: 500, margin: 50, marginTop: 20, padding: 50, textAlign: 'center',}} display=\"flex\" justifyContent=\"center\"  bgcolor=\"background.paper\">\n            <Box >\n                <div className=\"App\">\n\t\t\t<FormGroup >\n\t\t\t\t<TextField style={{padding:20}} id={\"name\"} value={name} onChange={updateName} label=\"Name: \" placeholder=\"Type student name here\" />\n\t\t\t\t<TextField style={{padding:20}} id={\"name\"} value={studentID} onChange={updateStudentID} label=\"StudentID: \" placeholder=\"Type studentID name here\" />\n                        <FormControlLabel style={{ padding: 10, margin: 10, }}\n\t\t\t\t\tcontrol={<Switch  checked={student} onChange={handleChange}     value=\"student\" />}\n\t\t\t\t\tlabel=\"Student\"\n                    />\n                    </FormGroup>\n                    <Grid container justify=\"space-around\" style={{padding:20}}>\n\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={add}>Add</Button>\n                        <Button color=\"secondary\" variant=\"contained\" onClick={remove}>Remove</Button>\n\t\t\t</Grid >\n                        <TableContainer component={Paper}>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell color=\"secondary\">Name</TableCell>\n                                    <TableCell>Student</TableCell>\n                                    <TableCell>StudentID</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody >\n                                {method.map((row, index) => (\n                                    <TableRow key={row.name + \"_\" + index}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell>\n                                            {row.student ? \"Is a Student\" : \"Not a student\"}\n                                        </TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {row.studentID} </TableCell>\n                                    </TableRow>\n                                ))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</div>\n            </Box>\n            \n        </Paper>\n\t);\n}\n\nexport default A;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Exercise3.1'\nimport Ap from './Exercise3.2'\nimport A from './Exercise3.3'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Ap/>\n     <A />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}